// Copyright (c) {{&year}} {{&copyright}}. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//
// {{fileName}}
// Created by {{&author}} on {{&date}}.
//


#include <{{&headerFile}}>

{{#namespace}}
namespace {{namespace}} {


{{/namespace}}
{{#structs}}
void from_json(const json& j, {{className}}::{{name}}& o) {
    {{#fields}}
    j.at("{{name}}").get_to(o.{{name}});
    {{/fields}}
}

void to_json(json& j, const {{className}}::{{name}}& o) {
    j = json{
    {{#fields}}
        {"{{name}}", o.{{name}}}{{^last}},{{/last}}
    {{/fields}}
    };
}


{{/structs}}
void from_json(const json& j, {{className}}& o) {
    {{#attributes}}
    j.at("{{name}}").get_to(*o.get{{key}}());
    {{/attributes}}
}

void to_json(json& j, const {{className}}& o) {
    j = json{
        {{#attributes}}
        {"{{name}}", *o.get{{key}}()}{{^last}},{{/last}}
        {{/attributes}}
    };
}

{{#namespace}}

} // namespace
{{/namespace}}

